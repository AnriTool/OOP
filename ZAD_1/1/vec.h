#ifndef VEC_H
#define VEC_H
/*

Описать функции для сложения и вычитания векторов, которые принимают в качестве
параметров два вектора и возвращают вектор в качестве результата.

Описать функцию, принимающую вектор в качестве параметра и «красиво» выводящую
его на консоль.

Описать перечисление для задания квадранта координатной плоскости.
Описать функцию, принимающую вектор в качестве параметра и возвращающую квадрант, в котором он
находится (как элемент перечисления).
*/

// Описать тип-структуру «вектор на плоскости», хранящую координаты х и у.
struct vec{   //Структура "вектор на плоскости"
    double x; //Координата X
    double y; //Координата Y

};
// Описать перечисление для задания квадранта координатной плоскости.
enum Quad {I = 1,II,III,IV}; //Перечесление, которое содержит в себе четверти плоскости. Счет начинается с единицы.


vec VecSum(vec a, vec b); //Объявляем функции для суммы и разности векторов.
vec VecDif(vec a, vec b);

void VecPrint(vec a); //Объявляем функцию для "красивого" вывода

int Quadrant(vec a); //Объявляем функцию для нахождения её квадранта


#endif // VEC_H
