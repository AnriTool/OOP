#include <iostream>
#include "vec.h"
using namespace std;
/*
Описать тип-структуру «вектор на плоскости», хранящую координаты х, у.

Описать функцию для вычисления скалярного произведения векторов, которая принимает
в качестве параметров два вектора и возвращает число в качестве результата.

Описать функцию для вычисления длины вектора, которая принимает в качестве
параметра вектор и возвращает число в качестве результата.

Описать функцию, принимающую вектор в качестве параметра и «красиво» выводящую
его на консоль.

Описать перечисление для задания квадранта координатной плоскости. Описать функцию,
принимающую вектор в качестве параметра и возвращающую квадрант, в котором он
находится (как элемент перечисления).
*/




int main()
{
    vec a,b;
    double comp, lenA, lenB;

    a.x = 3;  a.y = 5;
    b.x = -1; b.y = 4;
    comp = VecCompSk(a,b);
    lenA = VecLen(a);
    lenB = VecLen(b);

    cout << "vec1 =";
    VecPrint(a);
    cout << "vec2 =";
    VecPrint(b);

    cout << "lenght vec1 = " << lenA << "; lenght vec2 = "<< lenB << endl;
    cout <<"quadrant vec1 ="<< Quadrant(a)<<"; quadrant vec2 ="<< Quadrant(b) << endl;
    cout << "vec1 * vec2 = " << comp << endl;

    return 0;
}
